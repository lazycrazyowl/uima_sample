<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<description>simple uima examples</description>

	<groupId>edu.ucdenver.ccp</groupId>
	<artifactId>uima_sample_analysis_engines</artifactId>
	<version>1.0-SNAPSHOT</version>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jcasgen.typesystem>edu/ucdenver/ccp//uima_sample/TypeSystem.xml</jcasgen.typesystem>
        <jcasgen.conceptmapper.typesystem>edu/ucdenver/ccp/uima_sample/ConceptMapperSupplementTypeSystem.xml</jcasgen.conceptmapper.typesystem>
    </properties>

	<developers>
		<developer>
			<id>chris.roeder</id>
			<email>chris.roeder@ucdenver.edu</email>
			<name>Chris Roeder</name>
		</developer>
	</developers>

	<dependencies>
  		<dependency>
            <groupId>org.apache.uima</groupId>
            <artifactId>uimaj-core</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.uimafit</groupId>
            <artifactId>uimafit</artifactId>
            <version>1.4.0</version>
        </dependency>
		<dependency>
            <groupId>org.cleartk</groupId>
            <artifactId>cleartk-release</artifactId>
            <version>1.3.0</version>
			<type>pom</type>
			<scope>import</scope>
        </dependency>
		<dependency>
            <groupId>org.cleartk</groupId>
            <artifactId>cleartk-type-system</artifactId>
            <version>1.1.1</version>
        </dependency>
		<dependency>
            <groupId>org.cleartk</groupId>
            <artifactId>cleartk-opennlp-tools</artifactId>
            <version>0.10.2</version>
        </dependency>
        <dependency>
            <groupId>com.aliasi</groupId>
            <artifactId>lingpipe</artifactId>
            <version>3.9.3</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
        </dependency>
 		<dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.12</version>
        </dependency>
        <dependency>
            <groupId>org.apache.uima</groupId>
            <artifactId>ConceptMapper</artifactId>
            <version>2.3.1</version>
        </dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
         		<groupId>org.apache.maven.plugins</groupId>
         		<artifactId>maven-surefire-plugin</artifactId>
         		<version>2.12</version>
         		<configuration>
         		<argLine>-Xmx16g -d64</argLine>
   	      		</configuration>
	       </plugin>

			<!-- specify the java version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

  			<plugin>
	            <!-- run using "mvn exec:java" -->
	            <groupId>org.codehaus.mojo</groupId>
	            <artifactId>exec-maven-plugin</artifactId>
	            <version>1.1</version>
	            <executions>
	                <execution>
	                    <goals>
	                        <goal>java</goal>
	                    </goals>
	                </execution>
	            </executions>
	            <configuration/>
          	</plugin>
			<plugin>
                    <!-- This plugin generates java files with JCasGen.
						The phase makes it run with "mvn compile".
						A plugin below adds the generated code to source to be compiled. -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.2</version>
                    <executions>

                        <execution>
                            <id>run-jcasgen</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>java</goal>
                            </goals>
                            <configuration>
                                <mainClass>org.uimafit.util.JCasGenPomFriendly</mainClass>
                                <arguments>
                                    <argument>file:${project.basedir}/src/main/resources/${jcasgen.typesystem} </argument>
                                    <argument>${project.build.directory}/generated-sources/jcasgen</argument>
                                </arguments>
                            </configuration>
                        </execution>
                        <execution>
                            <id>run-jcasgen-2</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>java</goal>
                            </goals>
                            <configuration>
                                <mainClass>org.uimafit.util.JCasGenPomFriendly</mainClass>
                                <arguments>
                                    <argument>file:${project.basedir}/src/main/resources/${jcasgen.conceptmapper.typesystem} </argument>
                                    <argument>${project.build.directory}/generated-sources/jcasgen</argument>
                                </arguments>
                            </configuration>
                        </execution>

                        <!-- <execution> <id>export-descriptor-xml</id> <phase>prepare-package</phase>
                            <goals> <goal>java</goal> </goals> <configuration> <mainClass>edu.ucdenver.ccp.nlp.core.uima.build.XmlDescriptorWriter</mainClass>
                            <arguments> <argument>${project.basedir}/src/main/java</argument> <argument>${project.build.directory}/uima-descriptors</argument>
                            <argument>${project.version}</argument> </arguments> </configuration> </execution> -->

                    </executions>
            </plugin>
  			<plugin><!-- This plugin adds the jcasgen generated source code folder
                        as a project source folder -->
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.5</version>
                    <executions>
                        <execution>
                            <id>add-jcasgen-sources-${project.artifactId}</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>${project.build.directory}/generated-sources/jcasgen</source>
                                </sources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>


		</plugins>
	</build>
</project>
